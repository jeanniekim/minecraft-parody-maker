# machine learning minecraft parody maker
[7/18/22]

goal: input song (maybe even song name?), output legit minecraft parody lyrics

ideas: 
- have textfile/database of *popular* minecraft related words
  - ex. mine, mining, creeper, zombie, sword, pick, axe
- replace words from og lyrics that:
  * rhyme / partially rhyme
  * match part of speech 
  * match number of syllables
...with the minecraft alternative
  - will be a hierarchy of decisions
    - highest is rhyme + pos + syllables (all matching)
    - maybe if the word matches syllables + pos but doesn't rhyme it's ok
      - eg. i'm falling -> i'm mining (s, p, Xr)
      > but only if it's not the last word(?)
        - rhyme schemes???
    - not matching pos is pretty bad
      - i'm in the mining (X)
- somehow deal with common phrases
  - ex. mining + diamonds, gold, iron
    - diamonds (2 syllables), iron (2 syllables), gold (1 syllable)
      - decision tree/hierarchy again based on those?


how to match rhymes
how to match POS -> nltk
 - it's wrong sometimes "mine diamonds" -> noun noun
how to match syllables

step 1: read in the file

- how should the final dataset look
  - dict with word (pos, syllables, rhyme???)

rhyme: https://stackoverflow.com/questions/25714531/find-rhyme-using-nltk-in-python

1. read in the lyrics
2. analyze lyrics
3. perform Replacements
4. write the lyrics to new file

> POS tagging the lyrics
  - how to deal with "Enemy-y-y-y", parentheticals "(Woo!)", part labels "[Drake]"



how to preserve line breaks in the pos tagging processs?
  - doing line by line limits potential to keep words consistent across the lyrics
    > e.g. Chorus lines should stay consistent
      - "enemy" -> "minecraft" is a constant
        - specific nouns should be detected? to keep consistent?

  